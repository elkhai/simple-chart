{"version":3,"sources":["chart.js"],"names":[],"mappings":"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","file":"chart.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\tglobal.Chart = factory()\n}(this, function () { 'use strict';\n\n\t/**\n\t\t* Container class\n\t\t*/\n\tclass Container {\n\t/**\n\t\t* @param {String} [id] - id of container dom node\n\t\t*/\n\tconstructor(id) {\n\t  this.node = document.getElementById(id);\n\t  this.update();\n\t}\n\n\t\t/**\n\t\t * [update width and height]\n\t\t */\n\tupdate() {\n\t  this._width = this.node.width.baseVal.value;\n\t  this._height = this.node.height.baseVal.value;\n\t}\n\t/**\n\t\t* @param  {Number} [w]\n\t\t*/\n\tset width(w) {\n\t  this._width = w;\n\t}\n\t/**\n\t\t* @return {Number}\n\t\t*/\n\tget width() {\n\t  return this._width;\n\t}\n\n\t/**\n\t\t* @param  {Number} [h]\n\t\t*/\n\tset height(h) {\n\t  this._height = h;\n\t}\n\n\t/**\n\t\t* @return {Number}\n\t\t*/\n\tget height() {\n\t  return this._height;\n\t}\n\n\t/**\n\t\t* @param  {Node} [item] - dom node to be appended\n\t\t*/\n\tappend(item) {\n\t  this.node.appendChild(item);\n\t}\n\t};\n\n\t/**\n\t * abstract class for creation SVG nodes\n\t */\n\tclass SVGNode {\n\t    /**\n\t     * @param  {Object} [config]\n\t     * @return {Node}\n\t     */\n\t    constructor(config) {\n\t      if (config) {\n\t        let node = document.createElementNS('http://www.w3.org/2000/svg', config.type);\n\t        let attrs = config.attrs;\n\t        for (let key in attrs) {\n\t          if (attrs.hasOwnProperty(key)) {\n\t            if (key === 'textContent') {\n\t              node.textContent = attrs[key];\n\t            } else {\n\t              node.setAttributeNS(null, key, attrs[key]);\n\t            }\n\t          }\n\t        }\n\t        return node;\n\t      } else {\n\t        console.log('you do not create config for your node!');\n\t      }\n\t    }\n\t}\n\n\tclass Label extends SVGNode {\n\n\t    /**\n\t     * @param {Object} [data]\n\t     * @param {Object} [config]\n\t     * @returns {Node}\n\t     */\n\t    constructor(data, config) {\n\t      let svgConfig;\n\t      svgConfig = {\n\t        type: 'text',\n\t        attrs: {\n\t          x: data.x,\n\t          y: data.y,\n\t          'font-family': config.fontfamily,\n\t          'font-size': config.fontsize,\n\t          stroke: config.color,\n\t          fill: config.color,\n\t          textContent: '$ ' + data.text\n\t        }\n\t      };\n\t      return super(svgConfig);\n\t    }\n\t}\n\n\tclass Trandline extends SVGNode {\n\t    /**\n\t     * @param  {Object} [data] - prepared data\n\t     * @param  {Object} [config]\n\t     * @return {Node}\n\t     */\n\t    constructor(data, config) {\n\t      let svgConfig = {\n\t        type: 'polyline',\n\t        attrs: {\n\t          id: 'trandline_' + data.id,\n\t          fill: 'none',\n\t          stroke: config.color,\n\t          'stroke-width': config.width,\n\t          points: data.points\n\t        }\n\t      };\n\t      return super(svgConfig);\n\t    }\n\t}\n\n\tclass PriceLine extends SVGNode {\n\n\t  /**\n\t   * @param {Object} [data]\n\t   * @param {Object} [config]\n\t   * @returns {Node}\n\t   */\n\t  constructor(data, config) {\n\t    let svgConfig = {\n\t      type: 'line',\n\t      attrs: {\n\t        x1: data.x1,\n\t        y1: data.y1,\n\t        x2: data.x2,\n\t        y2: data.y2,\n\t        stroke: config.color,\n\t        'stroke-width': config.width\n\t      }\n\t    };\n\t    return super(svgConfig);\n\t  }\n\t}\n\n\tclass Chart {\n\t  /**\n\t   * @param  {String} [containerId]\n\t   * @param  {Object} [data] - data for chart creation\n\t   * @param  {Object} [config] - optional\n\t   */\n\t  constructor(containerId, data, config) {\n\t    if (!config) {\n\t      config = this.initConfig();\n\t    }\n\t    if (!data) {\n\t      data = this.initData();\n\t    }\n\t    let container = new Container(containerId);\n\t    let tempData = this.prepareData(data);\n\t    this.createLabels(tempData, config.label, container);\n\t    this.createPriceLines(config, container);\n\t    this.createTrandline(data, tempData, config, container);\n\t  }\n\n\t  /**\n\t   * initialize config, if input is empty\n\t   */\n\t  initConfig() {\n\t    return {\n\t      trandline: {\n\t        /**\n\t         * [color for trandline]\n\t         * @type {String}\n\t         */\n\t        color: '#979797',\n\t        /**\n\t         * [stroke-width]\n\t         * @type {Number}\n\t         */\n\t        width: 2\n\t      },\n\t      label: {\n\t        /**\n\t         * [fontfamily]\n\t         * @type {String}\n\t         */\n\t        fontfamily: 'sans-serif',\n\t        /**\n\t         * [fontsize for label]\n\t         * @type {Number}\n\t         */\n\t        fontsize: 15,\n\t        /**\n\t         * [color for stroke attr]\n\t         * @type {String}\n\t         */\n\t        color: '#a5a5a5'\n\t      },\n\t      priceLine: {\n\t        /**\n\t         * @type {String}\n\t         */\n\t        color: '#e7e7e7',\n\t        /**\n\t         * @type {Number}\n\t         */\n\t        width: 1\n\t      }\n\t    };\n\t  }\n\n\t    /**\n\t     * @return {Object}\n\t     */\n\t    initData() {\n\t      return {\n\t        /**\n\t         * [id for trandline]\n\t         * @type {String}\n\t         */\n\t        id: 'usd',\n\t        /**\n\t         * [points for create trandline]\n\t         * @type {Array}\n\t         */\n\t        points: [227.5, 228, 229, 226.3, 225, 227.2, 223]\n\t      };\n\t    }\n\n\t    /**\n\t     * @param  {Object} [data]\n\t     * @return {Object}\n\t     */\n\t    prepareData(data) {\n\t      let array = data.points.slice();\n\t      array.sort();\n\t      return {\n\t        minVal: Math.floor(array[0]),\n\t        maxVal: Math.ceil(array[array.length - 1])\n\t      };\n\t    }\n\n\t    /**\n\t     * @param  {Object} [data]\n\t     * @param  {Object} [config]\n\t     * @param  {Object} [container]\n\t     */\n\t    createLabels(data, config, container) {\n\t      let labelsData = {\n\t        min: {\n\t          x: 0,\n\t          y: container.height - config.fontsize / 3,\n\t          text: data.minVal\n\t        },\n\t        middle: {\n\t          x: 0,\n\t          y: container.height / 2 + config.fontsize / 3,\n\t          text: data.minVal + ((data.maxVal - data.minVal) / 2)\n\t        },\n\t        max: {\n\t          x: 0,\n\t          y: config.fontsize / 2 + config.fontsize / 3,\n\t          text: data.maxVal\n\t        }\n\t      };\n\t      let minText = new Label(labelsData.min, config);\n\t      let middleText = new Label(labelsData.middle, config);\n\t      let maxText = new Label(labelsData.max, config);\n\t      container.append(minText);\n\t      container.append(middleText);\n\t      container.append(maxText);\n\t    }\n\n\t  /**\n\t   * @param {Object} [config]\n\t   * @param {Object} [container]\n\t   */\n\t    createPriceLines(config, container) {\n\t      let data = {\n\t        min: {\n\t          x1: 50,\n\t          y1: container.height - config.label.fontsize / 2,\n\t          x2: container.width,\n\t          y2: container.height - config.label.fontsize / 2\n\t        },\n\t        middle: {\n\t          x1: 50,\n\t          y1: container.height / 2,\n\t          x2: container.width,\n\t          y2: container.height / 2\n\t        },\n\t        max: {\n\t          x1: 50,\n\t          y1: config.label.fontsize / 2,\n\t          x2: container.width,\n\t          y2: config.label.fontsize / 2\n\t        }\n\t      };\n\t      let minLine = new PriceLine(data.min, config.priceLine);\n\t      let middleLine = new PriceLine(data.middle, config.priceLine);\n\t      let maxLine = new PriceLine(data.max, config.priceLine);\n\t      container.append(minLine);\n\t      container.append(middleLine);\n\t      container.append(maxLine);\n\t    }\n\n\t    /**\n\t     * @param  {Object} [data]\n\t     * @param  {Object} [tempData]\n\t     * @param  {Object} [config]\n\t     * @param  {Object} [container]\n\t     */\n\t    createTrandline(data, tempData, config, container) {\n\t      let xStart = 50;\n\t      let xStep = (container.width - xStart) / (data.points.length - 1);\n\t      let yStart = container.height - config.label.fontsize;\n\t      let yStep = yStart / (tempData.maxVal - tempData.minVal);\n\t      let points = '';\n\t      let trandline;\n\t      data.points.forEach(function(val) {\n\t        points += Math.floor(xStart) + ',' + Math.floor((tempData.maxVal - val) * yStep + config.label.fontsize / 2) + ' ';\n\t        xStart += xStep;\n\t      });\n\t      let preparedData = {\n\t        id: data.id,\n\t        points: points\n\t      };\n\t      trandline = new Trandline(preparedData, config.trandline);\n\t      container.append(trandline);\n\t    }\n\t}\n\n\treturn Chart;\n\n}));\n"],"sourceRoot":"/source/"}