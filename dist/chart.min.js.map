{"version":3,"sources":["chart.min.js","/source/chart.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","define","amd","Chart","this","Container","id","node","document","getElementById","update","_width","width","baseVal","_height","height","item","appendChild","set","w","h","SVGNode","config","createElementNS","type","attrs","hasOwnProperty","textContent","setAttributeNS","console","log","Label","_SVGNode","data","svgConfig","x","y","font-family","fontfamily","font-size","fontsize","stroke","color","fill","text","Trandline","_SVGNode2","stroke-width","points","PriceLine","_SVGNode3","x1","y1","x2","y2","containerId","initConfig","initData","container","tempData","prepareData","createLabels","label","createPriceLines","createTrandline","trandline","priceLine","array","slice","sort","minVal","Math","floor","maxVal","ceil","labelsData","min","middle","max","minText","middleText","maxText","append","minLine","middleLine","maxLine","xStart","xStep","yStart","yStep","forEach","val","preparedData"],"mappings":"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","file":"chart.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\tglobal.Chart = factory()\n}(this, function () { 'use strict';\n\n\t/**\n\t\t* Container class\n\t\t*/\n\tclass Container {\n\t/**\n\t\t* @param {String} [id] - id of container dom node\n\t\t*/\n\tconstructor(id) {\n\t  this.node = document.getElementById(id);\n\t  this.update();\n\t}\n\n\t\t/**\n\t\t * [update width and height]\n\t\t */\n\tupdate() {\n\t  this._width = this.node.width.baseVal.value;\n\t  this._height = this.node.height.baseVal.value;\n\t}\n\t/**\n\t\t* @param  {Number} [w]\n\t\t*/\n\tset width(w) {\n\t  this._width = w;\n\t}\n\t/**\n\t\t* @return {Number}\n\t\t*/\n\tget width() {\n\t  return this._width;\n\t}\n\n\t/**\n\t\t* @param  {Number} [h]\n\t\t*/\n\tset height(h) {\n\t  this._height = h;\n\t}\n\n\t/**\n\t\t* @return {Number}\n\t\t*/\n\tget height() {\n\t  return this._height;\n\t}\n\n\t/**\n\t\t* @param  {Node} [item] - dom node to be appended\n\t\t*/\n\tappend(item) {\n\t  this.node.appendChild(item);\n\t}\n\t};\n\n\t/**\n\t * abstract class for creation SVG nodes\n\t */\n\tclass SVGNode {\n\t    /**\n\t     * @param  {Object} [config]\n\t     * @return {Node}\n\t     */\n\t    constructor(config) {\n\t      if (config) {\n\t        let node = document.createElementNS('http://www.w3.org/2000/svg', config.type);\n\t        let attrs = config.attrs;\n\t        for (let key in attrs) {\n\t          if (attrs.hasOwnProperty(key)) {\n\t            if (key === 'textContent') {\n\t              node.textContent = attrs[key];\n\t            } else {\n\t              node.setAttributeNS(null, key, attrs[key]);\n\t            }\n\t          }\n\t        }\n\t        return node;\n\t      } else {\n\t        console.log('you do not create config for your node!');\n\t      }\n\t    }\n\t}\n\n\tclass Label extends SVGNode {\n\n\t    /**\n\t     * @param {Object} [data]\n\t     * @param {Object} [config]\n\t     * @returns {Node}\n\t     */\n\t    constructor(data, config) {\n\t      let svgConfig;\n\t      svgConfig = {\n\t        type: 'text',\n\t        attrs: {\n\t          x: data.x,\n\t          y: data.y,\n\t          'font-family': config.fontfamily,\n\t          'font-size': config.fontsize,\n\t          stroke: config.color,\n\t          fill: config.color,\n\t          textContent: '$ ' + data.text\n\t        }\n\t      };\n\t      return super(svgConfig);\n\t    }\n\t}\n\n\tclass Trandline extends SVGNode {\n\t    /**\n\t     * @param  {Object} [data] - prepared data\n\t     * @param  {Object} [config]\n\t     * @return {Node}\n\t     */\n\t    constructor(data, config) {\n\t      let svgConfig = {\n\t        type: 'polyline',\n\t        attrs: {\n\t          id: 'trandline_' + data.id,\n\t          fill: 'none',\n\t          stroke: config.color,\n\t          'stroke-width': config.width,\n\t          points: data.points\n\t        }\n\t      };\n\t      return super(svgConfig);\n\t    }\n\t}\n\n\tclass PriceLine extends SVGNode {\n\n\t  /**\n\t   * @param {Object} [data]\n\t   * @param {Object} [config]\n\t   * @returns {Node}\n\t   */\n\t  constructor(data, config) {\n\t    let svgConfig = {\n\t      type: 'line',\n\t      attrs: {\n\t        x1: data.x1,\n\t        y1: data.y1,\n\t        x2: data.x2,\n\t        y2: data.y2,\n\t        stroke: config.color,\n\t        'stroke-width': config.width\n\t      }\n\t    };\n\t    return super(svgConfig);\n\t  }\n\t}\n\n\tclass Chart {\n\t  /**\n\t   * @param  {String} [containerId]\n\t   * @param  {Object} [data] - data for chart creation\n\t   * @param  {Object} [config] - optional\n\t   */\n\t  constructor(containerId, data, config) {\n\t    if (!config) {\n\t      config = this.initConfig();\n\t    }\n\t    if (!data) {\n\t      data = this.initData();\n\t    }\n\t    let container = new Container(containerId);\n\t    let tempData = this.prepareData(data);\n\t    this.createLabels(tempData, config.label, container);\n\t    this.createPriceLines(config, container);\n\t    this.createTrandline(data, tempData, config, container);\n\t  }\n\n\t  /**\n\t   * initialize config, if input is empty\n\t   */\n\t  initConfig() {\n\t    return {\n\t      trandline: {\n\t        /**\n\t         * [color for trandline]\n\t         * @type {String}\n\t         */\n\t        color: '#979797',\n\t        /**\n\t         * [stroke-width]\n\t         * @type {Number}\n\t         */\n\t        width: 2\n\t      },\n\t      label: {\n\t        /**\n\t         * [fontfamily]\n\t         * @type {String}\n\t         */\n\t        fontfamily: 'sans-serif',\n\t        /**\n\t         * [fontsize for label]\n\t         * @type {Number}\n\t         */\n\t        fontsize: 15,\n\t        /**\n\t         * [color for stroke attr]\n\t         * @type {String}\n\t         */\n\t        color: '#a5a5a5'\n\t      },\n\t      priceLine: {\n\t        /**\n\t         * @type {String}\n\t         */\n\t        color: '#e7e7e7',\n\t        /**\n\t         * @type {Number}\n\t         */\n\t        width: 1\n\t      }\n\t    };\n\t  }\n\n\t    /**\n\t     * @return {Object}\n\t     */\n\t    initData() {\n\t      return {\n\t        /**\n\t         * [id for trandline]\n\t         * @type {String}\n\t         */\n\t        id: 'usd',\n\t        /**\n\t         * [points for create trandline]\n\t         * @type {Array}\n\t         */\n\t        points: [227.5, 228, 229, 226.3, 225, 227.2, 223]\n\t      };\n\t    }\n\n\t    /**\n\t     * @param  {Object} [data]\n\t     * @return {Object}\n\t     */\n\t    prepareData(data) {\n\t      let array = data.points.slice();\n\t      array.sort();\n\t      return {\n\t        minVal: Math.floor(array[0]),\n\t        maxVal: Math.ceil(array[array.length - 1])\n\t      };\n\t    }\n\n\t    /**\n\t     * @param  {Object} [data]\n\t     * @param  {Object} [config]\n\t     * @param  {Object} [container]\n\t     */\n\t    createLabels(data, config, container) {\n\t      let labelsData = {\n\t        min: {\n\t          x: 0,\n\t          y: container.height - config.fontsize / 3,\n\t          text: data.minVal\n\t        },\n\t        middle: {\n\t          x: 0,\n\t          y: container.height / 2 + config.fontsize / 3,\n\t          text: data.minVal + ((data.maxVal - data.minVal) / 2)\n\t        },\n\t        max: {\n\t          x: 0,\n\t          y: config.fontsize / 2 + config.fontsize / 3,\n\t          text: data.maxVal\n\t        }\n\t      };\n\t      let minText = new Label(labelsData.min, config);\n\t      let middleText = new Label(labelsData.middle, config);\n\t      let maxText = new Label(labelsData.max, config);\n\t      container.append(minText);\n\t      container.append(middleText);\n\t      container.append(maxText);\n\t    }\n\n\t  /**\n\t   * @param {Object} [config]\n\t   * @param {Object} [container]\n\t   */\n\t    createPriceLines(config, container) {\n\t      let data = {\n\t        min: {\n\t          x1: 50,\n\t          y1: container.height - config.label.fontsize / 2,\n\t          x2: container.width,\n\t          y2: container.height - config.label.fontsize / 2\n\t        },\n\t        middle: {\n\t          x1: 50,\n\t          y1: container.height / 2,\n\t          x2: container.width,\n\t          y2: container.height / 2\n\t        },\n\t        max: {\n\t          x1: 50,\n\t          y1: config.label.fontsize / 2,\n\t          x2: container.width,\n\t          y2: config.label.fontsize / 2\n\t        }\n\t      };\n\t      let minLine = new PriceLine(data.min, config.priceLine);\n\t      let middleLine = new PriceLine(data.middle, config.priceLine);\n\t      let maxLine = new PriceLine(data.max, config.priceLine);\n\t      container.append(minLine);\n\t      container.append(middleLine);\n\t      container.append(maxLine);\n\t    }\n\n\t    /**\n\t     * @param  {Object} [data]\n\t     * @param  {Object} [tempData]\n\t     * @param  {Object} [config]\n\t     * @param  {Object} [container]\n\t     */\n\t    createTrandline(data, tempData, config, container) {\n\t      let xStart = 50;\n\t      let xStep = (container.width - xStart) / (data.points.length - 1);\n\t      let yStart = container.height - config.label.fontsize;\n\t      let yStep = yStart / (tempData.maxVal - tempData.minVal);\n\t      let points = '';\n\t      let trandline;\n\t      data.points.forEach(function(val) {\n\t        points += Math.floor(xStart) + ',' + Math.floor((tempData.maxVal - val) * yStep + config.label.fontsize / 2) + ' ';\n\t        xStart += xStep;\n\t      });\n\t      let preparedData = {\n\t        id: data.id,\n\t        points: points\n\t      };\n\t      trandline = new Trandline(preparedData, config.trandline);\n\t      container.append(trandline);\n\t    }\n\t}\n\n\treturn Chart;\n\n}));\n"],"sourceRoot":"/source/"}